.editor-document-bar {
	display: flex;
	align-items: center;
	// height: $button-size-compact;
	justify-content: space-between;
	// Flex items will, by default, refuse to shrink below a minimum
	// intrinsic width. In order to shrink this flexbox item, and
	// subsequently truncate child text, we set an explicit min-width.
	// See https://dev.w3.org/csswg/css-flexbox/#min-size-auto
	min-width: 0;
	background: $gray-100;
	border-radius: $grid-unit-05;
	width: min(100%, 400px);

	&:hover {
		background-color: $gray-200;
	}

	.components-button {
		border-radius: $grid-unit-05;
		transition: all 0.1s ease-out;
		@include reduce-motion("transition");

		&:hover {
			background: $gray-200;
		}
	}
}

.editor-document-bar__command {
	flex-grow: 1;
	overflow: hidden;
}

.editor-document-bar__title {
	flex: 1;
	color: $gray-900;
	font-size: 12px;
	gap: -2px;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	line-height: 1;

	span {
		text-transform: capitalize;
		font-size: 12px;
		color: $gray-700;
		line-height: 1;
	}

	// Offset the layout based on the width of the âŒ˜K label. This ensures the title is centrally aligned.
	@include break-medium() {
		padding-left: $grid-unit-30;
	}

	h1 {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		max-width: 70%;
		color: currentColor;
	}
}

.editor-document-bar__shortcut {
	color: $gray-700;
	min-width: $grid-unit-30;
	display: none;

	@include break-medium() {
		display: initial;
	}
}

.editor-document-bar__back.components-button.has-icon.has-text {
	min-width: $button-size;
	flex-shrink: 0;
	color: $gray-700;
	gap: 0;
	z-index: 1;
	position: absolute;

	&:hover {
		color: $gray-900;
		background-color: transparent;
	}
}
