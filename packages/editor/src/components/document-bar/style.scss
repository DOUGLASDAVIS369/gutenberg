.editor-document-bar {
	display: flex;
	height: $button-size-compact;
	justify-content: space-between;
	// Flex items will, by default, refuse to shrink below a minimum
	// intrinsic width. In order to shrink this flexbox item, and
	// subsequently truncate child text, we set an explicit min-width.
	// See https://dev.w3.org/csswg/css-flexbox/#min-size-auto
	min-width: 0;
	border-radius: $grid-unit-05;
	width: min(100%, 416px);

	.components-button {
		background: $gray-100;

		transition: all 0.1s ease-out;
		@include reduce-motion("transition");
	}
	&:not(.has-back-button) .components-button {
		border-radius: $grid-unit-05;
	}
	&.has-back-button {
		> .components-button {
			border-radius: $grid-unit-05 0 0 $grid-unit-05;
		}
		.editor-document-bar__core .components-button {
			border-radius: 0 $grid-unit-05 $grid-unit-05 0;
		}
	}

	@include break-large() {
		width: min(100%, 450px);
	}
}

.editor-document-bar__core {
	position: relative;
	display: flex;
	flex-grow: 1;

	button {
		max-width: 100%;
		position: absolute;
		inset: 0;
		justify-content: flex-end;
	}
}

.editor-document-bar__title {
	flex-grow: 1;
	color: $gray-900;
	gap: $grid-unit-05;
	display: flex;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	pointer-events: none;

	// Ensures centered alignment and prevents overlapping of the contents.
	@include break-medium() {
		// Offsets by the width of the command shortcut label plus its spacing from the side and the gap.
		padding-inline: $grid-unit-30 + $grid-unit-15 + $grid-unit-05;
		.has-back-button & {
			// Offsets by the width of the back button.
			padding-inline: 0 74px;
		}
	}

	.editor-document-bar.is-global & {
		color: var(--wp-block-synced-color);
	}

	.block-editor-block-icon {
		fill: currentColor;
		min-width: $grid-unit-30;
		flex-shrink: 0;
	}

	h1 {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		max-width: 70%;
		color: currentColor;
	}
}

.editor-document-bar__shortcut {
	color: $gray-800;
	min-width: $grid-unit-30;
	display: none;

	@include break-medium() {
		display: initial;
	}
}

.editor-document-bar__back.components-button.has-icon.has-text {
	min-width: $button-size;
	flex-shrink: 0;
	color: $gray-700;
	gap: 0;

	&:focus {
		// Ensure the focus ring is in front of the adjacent button.
		z-index: 1;
	}
	&:hover {
		color: $gray-900;
	}
}
